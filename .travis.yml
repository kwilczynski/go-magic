secure: "XQqZEEe/8ReX+skXY6igttJOKXBSDvmdohA3WJTFUDLcrpp/Wiob1O0yI8RQIh7QYd8uFQfIpF9ZrEG1L4QTMHHXS3CrPBP3kFZ3uC4Xk8Uf2PXP0HhSetB1nELSb9TXCB3r80GXHQ7yoqjcgbek5G61n2R6UOXm7vE0z8J0WtM="

language: go

cache:
  - apt

go:
  - 1.5.3
  - 1.6
  - tip

env:
  matrix:
    - VERSION=5.09 SHA1=9d905f9e50033c3f5be3728473cbb709a41550fb COMPILER=gcc
    - VERSION=5.09 SHA1=9d905f9e50033c3f5be3728473cbb709a41550fb COMPILER=clang
    - VERSION=5.14 SHA1=064c8f17a5f7ae1e336a9285131e046d3b2d04d7 COMPILER=gcc
    - VERSION=5.14 SHA1=064c8f17a5f7ae1e336a9285131e046d3b2d04d7 COMPILER=clang
    - VERSION=5.18 SHA1=8753e72097f2cc935608e3b1c57c4c4e31bd8d21 COMPILER=gcc
    - VERSION=5.18 SHA1=8753e72097f2cc935608e3b1c57c4c4e31bd8d21 COMPILER=clang
    - VERSION=5.19 SHA1=0dff09eb44fde1998be79e8d312e9be4456d31ee COMPILER=gcc
    - VERSION=5.19 SHA1=0dff09eb44fde1998be79e8d312e9be4456d31ee COMPILER=clang
    - VERSION=5.21 SHA1=9836603b75dde99664364b0e7a8b5492461ac0fe COMPILER=gcc
    - VERSION=5.21 SHA1=9836603b75dde99664364b0e7a8b5492461ac0fe COMPILER=clang
    - VERSION=5.22 SHA1=20fa06592291555f2b478ea2fb70b53e9e8d1f7c COMPILER=gcc
    - VERSION=5.22 SHA1=20fa06592291555f2b478ea2fb70b53e9e8d1f7c COMPILER=clang
    - VERSION=5.25 SHA1=fea78106dd0b7a09a61714cdbe545135563e84bd COMPILER=gcc
    - VERSION=5.25 SHA1=fea78106dd0b7a09a61714cdbe545135563e84bd COMPILER=clang

matrix:
  fast_finish: true
  allow_failures:
    - go: tip

branches:
  only:
    - master

install: true

before_script:
  - export PATH=${PATH}:${HOME}/gopath/bin:${GOPATH}
  - travis_retry sudo apt-get install -y --force-yes bc
  - export GO_VERSION=$(go version | perl -ne 'print ($1 || 99.99) if /^.+go([0-9]\.[0-9])|devel/')
  - export FRESH_VERSION=$(go version | perl -ne 'print "true" if /^.+go(1\.(2(\.[23])?|[345]))|devel/')
  - if [ "x$(echo "$GO_VERSION < 1.2" | bc)" != "x0" ]; then COMPILER=gcc; fi
  - export CC=$COMPILER
  - alias gcc=$COMPILER # XXX(kwilczynski): Ugly hack for Go prior to 1.2 and clang.
  - export SCRIPT_URL="https://gist.githubusercontent.com/kwilczynski/9270161/raw/ba0e5a8b00f8897d4bf47c1e670137f34df009b3/libmagic.sh"
  - travis_retry curl -L -s $SCRIPT_URL > libmagic.sh
  - travis_retry sudo VERSION=$VERSION SHA1=$SHA1 CC=$COMPILER PATH=$PATH bash libmagic.sh
  - |
    if [ "x${FRESH_VERSION}" == "xtrue" ]; then
      URL="golang.org/x/tools/cmd/cover"
      if [ "x$(echo "$GO_VERSION < 1.4" | bc)" != "x0" ]; then URL="code.google.com/p/go.tools/cmd/cover"; fi
      travis_retry go get -v -x $URL
      travis_retry go get -v -x github.com/axw/gocov/gocov
      export COVER_PROFILE=$(mktemp -t 'cover.XXXXXXXX')
    fi
  - travis_retry go get -v -x github.com/mattn/goveralls

script:
  - travis_retry go get -v -x github.com/kwilczynski/go-magic
  - |
    if [ "x${FRESH_VERSION}" == "xtrue" ]; then
      go test -v -x -covermode=count -coverprofile=${COVER_PROFILE} $(go list ./...)
      gocov convert $COVER_PROFILE | gocov report
    else
      go test -v -x $(go list ./...)
    fi
  - goveralls -v -repotoken $REPOSITORY_TOKEN
